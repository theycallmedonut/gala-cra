{"version":3,"sources":["images/gold-label.svg","images/cards/mobile/card-bg-xs.png","components/Form/components/FormButtons/styles.js","components/Form/components/FormButtons/components/FormButtonsItem.jsx","components/Form/components/FormButtons/index.jsx","components/Form/forms/DetailsForm.jsx","components/Form/forms/QtyForm.jsx","components/Form/utils/validationRules.js","components/GoldLabel/styles.js","components/GoldLabel/index.jsx","components/Form/components/Result/styles.js","components/Form/components/Result/index.jsx","components/Cards/styles.js","components/Cards/components/CardsListItem.jsx","components/Cards/components/CardsList.jsx","components/Cards/index.jsx","pages/Home/index.jsx"],"names":["module","exports","FormButtonsWrapper","styled","div","minWidth","tablet","FormButtonsItemWrapper","isActive","colorRed","colorWhite","colorBlack","FormButtonsItem","qty","current","text","bindedInputFunctions","radioRef","useRef","Item","style","margin","onClick","click","ref","type","name","value","display","FormButtons","buttonsDetails","MONTHS","NEED_MORE","map","button","key","DetailsForm","errors","currentForm","bindedSubmit","title","onCancel","addLineBreaks","phone","label","Input","placeholder","PLACEHOLDER_PHONE","defaultValue","PLACEHOLDER_NAME","isAnonymous","Checkbox","STAGE_2_ANONYMOUS","defaultChecked","ActionButtons","onSubmit","submitTitle","BUTTON_SEND","mapDispatchToProps","setQty","setQtyAction","setIsDetailsStage","setIsDetailsStageAction","connect","isDetailsStage","basic","props","goToNextStage","isCustomQty","handleSetQty","useCallback","useEffect","STAGE_2_TITLE","STAGE_1_FORM_SUBTITLE","ContactForm","afterSubmitAction","PLACEHOLDER_NEXT","BUTTON_NEXT","mustBeFilled","regexp","RegExp","mustBeNumber","GoldLabelWrapper","goldLabelSvg","GoldLabelTitle","GoldLabelDescription","GoldLabel","className","date","ResultTitle","FormTitle","ResultMessage","Result","beforeSubmit","RESULT_TITLE","RESULT_SUCCESS_MESSAGE","BUTTON_AGAIN","CardsWrapper","Tabs","desktop","colorBlackLight","secondaryFont","CardsListWrapper","CardsListItemWrapper","CardWrapper","cardBgXs","CardType","CardQty","CardMonth","CardGoldLabel","CardsListItem","PREMIUM_MEMBER","MONTH","isMobile","list","getChunk","containerWidth","window","innerWidth","itemWidth","Math","floor","columns","useMemo","chunk","result","i","j","length","push","slice","tab","row","gutter","card","i2","TabPane","getCards","fetchCardsAction","cards","initialForm","1","rules","2","firstName","lastName","cardNumber","cardMonth","cardYear","email","address","isResident","nationalId","check1","check2","check3","4","memo","withRouter","useState","stage","setStage","setCurrentForm","goToPrevStage","stagesActions","sendQtyFormApi","then","sendPaymentFormApi","3","sendContactFormApi","validation","useValidation","onClearForm","direction","QtyForm","STAGE_1_TITLE","Payment","goToStage","number"],"mappings":"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","file":"static/js/5.7989e537.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gold-label.bb046078.svg\";","module.exports = __webpack_public_path__ + \"static/media/card-bg-xs.d88ad510.png\";","import styled from 'styled-components';\nimport { colorBlack, colorRed, colorWhite } from '../../../../styles/variables/colors';\nimport { minWidth } from '../../../../styles/mixins';\n\nexport const FormButtonsWrapper = styled.div`\n  display: flex;\n  flex-flow: wrap;\n  padding: 18px 36px;\n\n  ${minWidth.tablet`\n    padding-right: 0;\n    padding-left: 0;\n  `}\n`;\n\nexport const FormButtonsItemWrapper = styled.div`\n  width: 92px;\n  height: 66px;\n  margin: 6px;\n  border-radius: 10px;\n  background: ${({ isActive }) => (isActive ? colorRed : colorWhite)};\n  color: ${({ isActive }) => (isActive ? colorWhite : colorBlack)};\n  text-transform: uppercase;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  font-size: 14px;\n  filter: drop-shadow(0px 1px 10px rgba(0, 0, 0, 0.15));\n\n  b {\n    display: block;\n    font-size: 25px;\n    line-height: 1;\n  }\n`;\n","import React, { useRef } from 'react';\nimport { Form } from 'antd';\nimport { FormButtonsItemWrapper } from '../styles';\n\nconst FormButtonsItem = ({ qty, current, text, bindedInputFunctions }) => {\n  const radioRef = useRef();\n\n  const handleClick = () => radioRef.current.click();\n\n  return (\n    <Form.Item style={{ margin: 0 }}>\n      <FormButtonsItemWrapper isActive={current === qty} onClick={handleClick}>\n        <input\n          ref={radioRef}\n          type=\"radio\"\n          name=\"qty\"\n          value={qty}\n          style={{ display: 'none' }}\n          {...bindedInputFunctions}\n        />\n        {qty !== 'more' && <b>{qty}</b>}\n        {text}\n      </FormButtonsItemWrapper>\n    </Form.Item>\n  );\n};\n\nexport default FormButtonsItem;\n","import React, { useState } from 'react';\nimport { FormButtonsWrapper } from './styles';\nimport { MONTHS, NEED_MORE } from '../../../../constants';\nimport FormButtonsItem from './components/FormButtonsItem';\n\nconst FormButtons = ({ bindedInputFunctions, current }) => {\n  const buttonsDetails = [\n    { qty: '5', text: MONTHS },\n    { qty: '10', text: MONTHS },\n    { qty: '100', text: MONTHS },\n    { qty: 'more', text: NEED_MORE },\n  ];\n\n  return (\n    <FormButtonsWrapper>\n      {buttonsDetails.map((button) => (\n        <FormButtonsItem\n          {...button}\n          key={button.qty}\n          current={current}\n          bindedInputFunctions={bindedInputFunctions}\n        />\n      ))}\n    </FormButtonsWrapper>\n  );\n};\n\nexport default FormButtons;\n","import React, { useState } from 'react';\nimport { bool, func } from 'prop-types';\nimport {\n  FormButton,\n  FormInput,\n  FormSubtitle,\n  FormTitle,\n  FormWrapper,\n} from '../../../styles/UI/form';\nimport {\n  BUTTON_BACK,\n  BUTTON_NEXT,\n  BUTTON_SEND,\n  PHONE_LABEL,\n  PLACEHOLDER_NAME,\n  PLACEHOLDER_NEXT,\n  PLACEHOLDER_PHONE,\n  STAGE_2_ANONYMOUS,\n  STAGE_1_FORM_SUBTITLE,\n  PLACEHOLDER_FIRST_NAME,\n} from '../../../constants';\nimport { addLineBreaks } from '../../../utils/string';\nimport Input from '../components/Input';\nimport Button from '../components/Button';\nimport Checkbox from '../components/Checkbox';\nimport { Form } from 'antd';\nimport ActionButtons from '../components/ActionButtons';\n\nconst DetailsForm = ({\n  errors,\n  currentForm,\n  bindedSubmit,\n  bindedInputFunctions,\n  title,\n  onCancel,\n}) => {\n  return (\n    <>\n      <FormTitle>{addLineBreaks(title)}</FormTitle>\n      <Form.Item {...errors.phone} label=\"\">\n        <Input\n          type=\"text\"\n          name=\"phone\"\n          placeholder={PLACEHOLDER_PHONE}\n          defaultValue={currentForm.phone}\n          {...bindedInputFunctions}\n        />\n      </Form.Item>\n      <Form.Item {...errors.name} label=\"\">\n        <Input\n          type=\"text\"\n          name=\"name\"\n          placeholder={PLACEHOLDER_NAME}\n          defaultValue={currentForm.name}\n          {...bindedInputFunctions}\n        />\n      </Form.Item>\n      <Form.Item {...errors.isAnonymous} label=\"\">\n        <Checkbox\n          label={STAGE_2_ANONYMOUS}\n          name=\"isAnonymous\"\n          defaultChecked={currentForm.isAnonymous}\n          {...bindedInputFunctions}\n        />\n      </Form.Item>\n\n      <ActionButtons onSubmit={bindedSubmit} submitTitle={BUTTON_SEND} onCancel={onCancel} />\n    </>\n  );\n};\n\nDetailsForm.propTypes = {\n  isLoading: bool,\n  signInAction: func,\n  t: func,\n};\n\nexport default DetailsForm;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Form } from 'antd';\nimport { connect } from 'react-redux';\n\nimport { FormSubtitle, FormTitle } from '../../../styles/UI/form';\nimport {\n  BUTTON_NEXT,\n  PLACEHOLDER_NEXT,\n  STAGE_1_FORM_SUBTITLE,\n  STAGE_2_TITLE,\n} from '../../../constants';\nimport FormButtons from '../components/FormButtons';\nimport { addLineBreaks } from '../../../utils/string';\nimport Input from '../components/Input';\nimport ActionButtons from '../components/ActionButtons';\nimport ContactForm from './ContactForm';\nimport DetailsForm from './DetailsForm';\nimport { setIsDetailsStageAction, setQtyAction } from '../../../redux/actions/basic';\n\nconst QtyFrom = (props) => {\n  const {\n    bindedInputFunctions,\n    setIsDetailsStage,\n    goToNextStage,\n    isDetailsStage,\n    currentForm,\n    errors,\n    setQty,\n    title,\n  } = props;\n  const { qty } = currentForm;\n  const isCustomQty = qty === 'more';\n\n  const showDetails = () => setIsDetailsStage(true);\n  const hideDetails = () => setIsDetailsStage(false);\n  const handleSetQty = useCallback(() => {\n    setQty({ qty });\n  }, [qty]);\n\n  useEffect(handleSetQty, [qty]);\n\n  return isDetailsStage ? (\n    <DetailsForm title={STAGE_2_TITLE} onCancel={hideDetails} {...props} />\n  ) : (\n    <>\n      <FormTitle>{addLineBreaks(title)}</FormTitle>\n      <FormSubtitle>{addLineBreaks(STAGE_1_FORM_SUBTITLE)}</FormSubtitle>\n      <FormButtons current={qty} bindedInputFunctions={bindedInputFunctions} />\n\n      {!isCustomQty ? (\n        <>\n          <Form.Item {...errors.qty} label=\"\">\n            <Input\n              name=\"qty\"\n              placeholder={PLACEHOLDER_NEXT}\n              value={currentForm.qty}\n              {...bindedInputFunctions}\n            />\n          </Form.Item>\n          <ActionButtons onSubmit={showDetails} submitTitle={BUTTON_NEXT} style={{ margin: 0 }} />\n        </>\n      ) : (\n        <ContactForm afterSubmitAction={goToNextStage} {...props} />\n      )}\n    </>\n  );\n};\n\nQtyFrom.propTypes = {};\n\nconst mapStateToProps = ({ basic }) => ({\n  isDetailsStage: basic.isDetailsStage,\n});\n\nconst mapDispatchToProps = {\n  setQty: setQtyAction,\n  setIsDetailsStage: setIsDetailsStageAction,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QtyFrom);\n","export const mustBeFilled = {\n  text: 'Field must be filled', // 'Text field must be filled',\n  regexp: new RegExp('^.+$', 'gm'),\n};\n\nexport const mustBeNumber = {\n  text: 'Must be number', // 'Must be number',\n  regexp: new RegExp('^[0-9]+$', 'g'),\n};\n\nexport const mustBeEmail = {\n  text: 'Field must be url', // 'Field must be url',\n  regexp: new RegExp(\n    // prettier-ignore\n    // eslint-disable-next-line\n    /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    'gm',\n  ),\n};\n","import styled from 'styled-components';\nimport goldLabelSvg from '../../images/gold-label.svg';\n\nexport const GoldLabelWrapper = styled.div`\n  background: url('${goldLabelSvg}');\n  width: 265px;\n  height: 61px;\n  display:flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  line-height: 1.2;\n`;\n\nexport const GoldLabelTitle = styled.div`\n  font-size: 16px;\n`;\n\nexport const GoldLabelDescription = styled.div`\n  font-size: 14px;\n`;\n","import React from 'react';\nimport { GoldLabelWrapper, GoldLabelTitle, GoldLabelDescription } from './styles';\n\nconst GoldLabel = ({ className, title, date, style }) => {\n  return (\n    <GoldLabelWrapper className={className} style={style}>\n      <GoldLabelTitle>{title}</GoldLabelTitle>\n      <GoldLabelDescription>{date}</GoldLabelDescription>\n    </GoldLabelWrapper>\n  );\n};\n\nexport default GoldLabel;\n","import styled from 'styled-components';\nimport { FormTitle } from '../../../../styles/UI/form';\n\nexport const ResultTitle = styled(FormTitle)`\n  margin-bottom: 50px;\n`;\n\nexport const ResultMessage = styled.div`\n  margin: 30px 0;\n  font-weight: bold;\n  font-size: 20px;\n  line-height: 30px;\n  text-align: center;\n  text-transform: uppercase;\n`;\n","import React from 'react';\nimport { FormTitle, FormWrapper } from '../../../../styles/UI/form';\nimport GoldLabel from '../../../GoldLabel';\nimport {\n  BUTTON_AGAIN,\n  LABEL_CHECK_1_LINK,\n  RESULT_SUCCESS_MESSAGE,\n  RESULT_TITLE,\n} from '../../../../constants';\nimport Button from '../Button';\nimport routes from '../../../../routes';\nimport routesPath from '../../../../config/routePaths';\nimport { ResultMessage, ResultTitle } from './styles';\nimport { addLineBreaks } from '../../../../utils/string';\nimport { Link } from 'react-router-dom';\nimport ActionButtons from '../ActionButtons';\n\nconst Result = ({ title, date, onSubmit, beforeSubmit }) => {\n  const handleSubmit = () => {\n    beforeSubmit();\n    onSubmit();\n  };\n\n  return (\n    <>\n      <ResultTitle>{RESULT_TITLE}</ResultTitle>\n      <GoldLabel title={title} date={date} style={{ margin: '0 auto' }} />\n      <ResultMessage>{addLineBreaks(RESULT_SUCCESS_MESSAGE)}</ResultMessage>\n      <ActionButtons onSubmit={handleSubmit} submitTitle={BUTTON_AGAIN} />\n    </>\n  );\n};\n\nexport default Result;\n","import styled from 'styled-components';\nimport { Tabs } from 'antd';\nimport { colorBlackLight, colorRed, colorWhite } from '../../styles/variables/colors';\nimport { secondaryFont } from '../../styles/variables/fonts';\nimport { minWidth } from '../../styles/mixins';\n\nimport cardBgXs from '../../images/cards/mobile/card-bg-xs.png';\nimport GoldLabel from '../GoldLabel';\n\nexport const CardsWrapper = styled(Tabs)`\n  position: relative;\n  margin: 30px auto;\n\n  ${minWidth.desktop`\n    margin-top: 50px;\n  `};\n\n  .ant-row {\n    background: linear-gradient(0deg, #979797 -2.35%, rgba(151, 151, 151, 0) 97.83%);\n    background-position: 0 10px;\n    background-size: 100% 130px;\n    background-repeat: no-repeat;\n    justify-content: center;\n    width: 100%;\n  }\n\n  .ant-tabs-content {\n    position: relative;\n    z-index: 0;\n\n    &:after {\n      content: '';\n      position: absolute;\n      top: 0px;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      //box-shadow: inset 0 0 70px 40px rgba(0, 0, 0, 0.5);\n      background: linear-gradient(\n        90deg,\n        #111111 0.04%,\n        rgba(17, 17, 17, 0) 35.39%,\n        rgba(17, 17, 17, 0) 64.48%,\n        #111111 99.96%\n      );\n    }\n  }\n  .ant-tabs-nav-list {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 45px;\n    background: rgba(224, 225, 228, 0.9);\n\n    .ant-tabs-tab {\n      margin: 0;\n      padding: 20px;\n      border-radius: 45px;\n      background: none;\n      border: 0;\n\n      &.ant-tabs-tab-active {\n        background: ${colorWhite};\n        box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.1);\n        border-radius: 45px;\n\n        > .ant-tabs-tab-btn {\n          color: ${colorRed};\n        }\n      }\n\n      > .ant-tabs-tab-btn {\n        font-size: 16px;\n        line-height: 1;\n        font-weight: bold;\n        color: ${colorBlackLight};\n        font-family: ${secondaryFont};\n      }\n    }\n  }\n\n  .ant-tabs-nav:before {\n    content: none;\n  }\n\n  .ant-tabs-nav-wrap {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    &:before,\n    &:after {\n      content: none;\n    }\n  }\n`;\n\nexport const CardsListWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nexport const CardsListItemWrapper = styled.div`\n  justify-content: center;\n  text-align: center;\n`;\n\nexport const CardWrapper = styled.div`\n  position: relative;\n  margin-bottom: 10px;\n  margin-top: 42px;\n  width: 155px;\n  height: 100px;\n  background: url(${cardBgXs}) center center no-repeat;\n`;\n\nexport const CardType = styled.div`\n  text-transform: uppercase;\n  color: ${colorRed};\n  text-align: right;\n  opacity: 0.5;\n  font-weight: bold;\n  font-size: 11px;\n  margin: 5px 8px 0 0;\n  padding-top: 5px;\n`;\n\nexport const CardQty = styled.div`\n  font-size: 52px;\n  text-align: center;\n  line-height: 1;\n  font-weight: bold;\n  color: ${colorRed};\n`;\n\nexport const CardMonth = styled.div`\n  font-size: 14px;\n  line-height: 1;\n  color: ${colorRed};\n  opacity: 0.5;\n  text-transform: uppercase;\n  text-align: center;\n`;\n\nexport const CardGoldLabel = styled(GoldLabel)`\n  background-size: cover;\n  width: 138px;\n  height: 31px;\n  margin: 0 auto;\n  > * {\n    font-size: 10px;\n    line-height: 1.2;\n  }\n`;\n","import React from 'react';\nimport {\n  CardsListItemWrapper,\n  CardType,\n  CardQty,\n  CardWrapper,\n  CardGoldLabel,\n  CardMonth,\n} from '../styles';\nimport { MONTH, MONTHS, PREMIUM_MEMBER } from '../../../constants';\n\nconst CardsListItem = ({ title, date, qty }) => {\n  return (\n    <CardsListItemWrapper>\n      <CardWrapper>\n        <CardType>{PREMIUM_MEMBER}</CardType>\n        <CardQty>{qty}</CardQty>\n        <CardMonth>{qty === 1 ? MONTH : MONTHS}</CardMonth>\n      </CardWrapper>\n      <CardGoldLabel title={title} date={date} />\n    </CardsListItemWrapper>\n  );\n};\n\nexport default CardsListItem;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { Col, Row } from 'antd';\nimport { connect } from 'react-redux';\n\n// Styles\nimport { CardsListWrapper } from '../styles';\n\n// Components\nimport CardsListItem from './CardsListItem';\n\nconst CardsList = ({ title, list, isMobile }) => {\n  const getChunk = useCallback(() => {\n    const containerWidth = window.innerWidth - 30;\n    const itemWidth = isMobile ? 156 + 10 : 180 + 10;\n\n    return Math.floor(containerWidth / itemWidth);\n  }, [isMobile, window.innerWidth]);\n\n  const columns = useMemo(() => {\n    const chunk = getChunk();\n    const result = [];\n\n    for (let i = 0, j = list.length; i < j; i += chunk) {\n      result.push(list.slice(i, i + chunk));\n    }\n\n    return result;\n  }, [list, isMobile]);\n\n  return (\n    <CardsListWrapper tab={title}>\n      {columns.map((row, i) => (\n        <Row key={i} gutter={10}>\n          {row.map((card, i2) => (\n            <Col key={i2}>\n              <CardsListItem {...card} />\n            </Col>\n          ))}\n        </Row>\n      ))}\n    </CardsListWrapper>\n  );\n};\n\nconst mapStateToProps = ({ basic }) => ({\n  isMobile: basic.isMobile,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardsList);\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Tabs } from 'antd';\nimport { CardsWrapper } from './styles';\nimport CardsList from './components/CardsList';\nimport { connect } from 'react-redux';\nimport { fetchCardsAction } from '../../redux/actions/basic';\n\nconst { TabPane } = Tabs;\n\nconst Cards = ({ getCards, cards }) => {\n  useEffect(() => {\n    if (!cards.length) getCards();\n  }, [cards]);\n\n  return (\n    <CardsWrapper type=\"card\">\n      {cards.map((list) => (\n        <TabPane key={list.title} tab={list.title}>\n          <CardsList {...list} />\n        </TabPane>\n      ))}\n    </CardsWrapper>\n  );\n};\n\nconst mapStateToProps = ({ basic }) => ({\n  cards: basic.cards,\n});\n\nconst mapDispatchToProps = {\n  getCards: fetchCardsAction,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cards);\n","import React, { memo, useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Form } from 'antd';\nimport { connect } from 'react-redux';\n\n// Constants\nimport { STAGE_1_TITLE } from '../../constants';\n\n// Actions\nimport { sendContactFormApi, sendPaymentFormApi, sendQtyFormApi } from '../../api';\n\n// Components\nimport { FormWrapper } from '../../styles/UI/form';\nimport QtyForm from '../../components/Form/forms/QtyForm';\nimport Payment from './components/Payment';\nimport useValidation from '../../components/Form/utils/useValidation';\nimport { mustBeFilled, mustBeNumber } from '../../components/Form/utils/validationRules';\nimport Result from '../../components/Form/components/Result';\nimport Cards from '../../components/Cards';\nimport { setIsDetailsStageAction } from '../../redux/actions/basic';\n\nconst initialForm = {\n  1: {\n    qty: { value: '', rules: [mustBeFilled, mustBeNumber] },\n    phone: { value: '', rules: [mustBeFilled] },\n    name: { value: '', rules: [] },\n    isAnonymous: { value: true, rules: [] },\n  },\n  2: {\n    firstName: { value: '', rules: [mustBeFilled] },\n    lastName: { value: '', rules: [] },\n    cardNumber: { value: '', rules: [] },\n    cardMonth: { value: '', rules: [] },\n    cardYear: { value: '', rules: [] },\n    card: { value: '', rules: [] },\n    email: { value: '', rules: [] },\n    address: { value: '', rules: [] },\n    isResident: { value: true, rules: [] },\n    nationalId: { value: '', rules: [] },\n    check1: { value: true, rules: [] },\n    check2: { value: true, rules: [] },\n    check3: { value: true, rules: [] },\n  },\n  4: {\n    phone: { value: '', rules: [mustBeFilled] },\n    email: { value: '', rules: [] },\n  },\n};\n\nconst Home = ({ qty, isMobile, isDetailsStage, setIsDetailsStage }) => {\n  const [stage, setStage] = useState(1);\n  const [currentForm, setCurrentForm] = useState({});\n\n  // Actions:\n  const goToStage = (number) => setStage(number);\n  const goToStart = () => setStage(1);\n  const goToNextStage = () => setStage(stage + 1);\n  const goToPrevStage = () => setStage(stage - 1);\n  const sendQty = () => sendQtyFormApi(currentForm).then(goToNextStage);\n  const sendPayment = () => sendPaymentFormApi(currentForm).then(goToNextStage);\n  const sendContactForm = () => sendContactFormApi(currentForm).then(goToPrevStage);\n  const stagesActions = {\n    1: sendQty,\n    2: sendPayment,\n    3: goToStart,\n    4: sendContactForm,\n  };\n\n  const validation = useValidation(stagesActions[stage], initialForm[stage]);\n  const { onClearForm, bindedSubmit } = validation;\n\n  const restartDonation = () => {\n    onClearForm();\n    setIsDetailsStage(false);\n  };\n\n  useEffect(() => {\n    setCurrentForm(validation.currentForm);\n  }, [validation.currentForm]);\n\n  return (\n    <>\n      <FormWrapper\n        direction=\"column\"\n        qty={qty}\n        className={`form-qty form-qty--${\n          isMobile ? 'mobile' : 'desktop'\n        } form-qty--${qty} form-stage--${stage} ${isDetailsStage && 'form-details'}`}\n      >\n        <Form>\n          {stage === 1 && (\n            <QtyForm\n              title={STAGE_1_TITLE}\n              goToNextStage={goToNextStage}\n              goToPrevStage={goToPrevStage}\n              {...validation}\n            />\n          )}\n\n          {(stage === 2 || stage === 4) && (\n            <Payment\n              onSubmit={bindedSubmit}\n              stage={stage}\n              goToPrevStage={goToPrevStage}\n              goToNextStage={goToNextStage}\n              goToStage={goToStage}\n              {...validation}\n            />\n          )}\n\n          {stage === 3 && (\n            <Result\n              title=\"from Ultraslan community\"\n              date=\"2 September 2020\"\n              beforeSubmit={restartDonation}\n              onSubmit={bindedSubmit}\n            />\n          )}\n        </Form>\n      </FormWrapper>\n\n      {/* label: CARDS */}\n      <Cards />\n    </>\n  );\n};\n\nconst mapStateToProps = ({ basic }) => ({\n  qty: basic.qty,\n  isMobile: basic.isMobile,\n  isDetailsStage: basic.isDetailsStage,\n});\n\nconst mapDispatchToProps = {\n  setIsDetailsStage: setIsDetailsStageAction,\n};\n\nexport default memo(connect(mapStateToProps, mapDispatchToProps)(withRouter(Home)));\n"],"sourceRoot":""}