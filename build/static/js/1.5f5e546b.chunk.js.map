{"version":3,"sources":["styles/common.js","styles/UI/form.js","components/Form/components/ActionButtons/styles.js","components/Form/components/ActionButtons/index.jsx","components/Form/components/Button/styles.js","components/Form/components/Button/index.jsx","components/Form/components/Input/styles.js","components/Form/components/Input/index.jsx","styles/variables/fonts.js","components/Form/forms/ContactForm.jsx","components/Form/utils/useValidation.js","components/Form/components/Checkbox/styles.js","components/Form/components/Checkbox/index.jsx","images/checkbox.svg","components/Form/components/Switch/styles.js","components/Form/components/Switch/index.jsx","components/Form/forms/PaymentForm.jsx","styles/UI/tabs.js","pages/Home/components/Payment/index.jsx"],"names":["Container","styled","div","display","flexDirection","alignItems","justifyContent","pageBackgroundColor","minWidth","phone","maxWidth","tablet","width","hideOnDesktop","css","hideOnMobile","mobileFirst","top","textStyles","FormWrapper","direction","logo","primaryFont","FormTitle","FormSubtitle","ActionButtonsWrapper","ActionButtonsSubmit","Button","ActionButtonsCancel","ActionButtons","onSubmit","onCancel","submitTitle","style","type","onClick","marginTop","BUTTON_BACK","FormButton","colorRed","colorBlackLight","colorWhite","children","otherProps","FormInput","Input","colorBlack","secondaryFont","ContactForm","errors","currentForm","bindedInputFunctions","bindedSubmit","PHONE_LABEL","Item","label","name","size","placeholder","PLACEHOLDER_PHONE","defaultValue","margin","email","PLACEHOLDER_EMAIL","marginBottom","formToKeyValue","form","result","Object","keys","forEach","field","value","useValidation","submitAction","initialForm","formData","useState","setForm","setErrors","onClearForm","formValues","saveInput","validateInput","isNotSetState","rules","testTargets","length","regexp","text","param","confirmField","stag","target","isError","RegExp","test","validateStatus","help","state","newState","isEmptyResult","isPresentInState","validateForm","entries","validateElement","submitIfValid","initEvent","event","select","isUnixDate","persist","isDatePicker","moment","isSelect","isMultiSelect","Array","isArray","isCheckbox","checked","defaultChecked","isRadio","getTextType","valueOf","format","props","onChange","isTimeStampFormat","valuesByType","onFocus","currentName","eventName","otherErrors","onKeyDown","isEnterPressed","keyCode","isTextarea","onBlur","preventDefault","prepareForm","useCallback","useEffect","formLength","CheckboxBlock","Checkbox","checkbox","CheckboxTitle","className","module","exports","FormSwitchWrapper","FormSwitch","Switch","Check1Label","to","LABEL_CHECK_1_LINK","LABEL_CHECK_1_TEXT","Check2Label","LABEL_CHECK_2_LINK","LABEL_CHECK_2_TEXT","PaymentForm","goToPrevStage","textAlign","CARD_INFO","firstName","PLACEHOLDER_FIRST_NAME","lastName","PLACEHOLDER_LAST_NAME","cardNumber","PLACEHOLDER_CARD_NUMBER","gutter","flexWrap","cardMonth","PLACEHOLDER_CARD_MONTH","cardYear","PLACEHOLDER_CARD_YEAR","card","PLACEHOLDER_CARD_CODE","address","PLACEHOLDER_ADDRESS","isResident","LABEL_RESIDENT","nationalId","PLACEHOLDER_NATIONAL_ID","check1","check2","check3","LABEL_CHECK_3_TEXT","BUTTON_COMPLETE_DONATION","TabPane","Tabs","TabsWrapper","TabsItem","Payment","stage","goToStage","PAYMENT_TITLE","defaultActiveKey","key","Number","tab","CARD","CONTACT_ME"],"mappings":"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","file":"static/js/1.5f5e546b.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\nimport { maxWidth, minWidth } from './mixins';\n\nexport const Container = styled.div`\n  min-width: 320px;\n  max-width: 1200px;\n  margin: 0 auto;\n  display: ${({ display }) => display || 'flex'};\n  flex-direction: ${({ flexDirection }) => flexDirection || 'row'};\n  align-items: ${({ alignItems }) => alignItems || 'flex-start'};\n  justify-content: ${({ justifyContent }) => justifyContent || 'flex-start'};\n`;\n\nexport const PageWrapper = styled.div`\n  padding-top: 5px;\n  padding-bottom: 15px;\n  background-color: ${({ pageBackgroundColor }) => pageBackgroundColor || 'transparent'};\n\n  ${minWidth.phone`\n    padding-top: 15px;\n    padding-bottom: 15px;\n  `}\n\n  ${maxWidth.tablet`\n    padding-bottom: 0;\n  `}\n`;\n\nexport const FlexContainer = styled.div`\n  display: flex;\n  flex-direction: ${({ flexDirection }) => flexDirection || 'row'};\n  align-items: ${({ alignItems }) => alignItems || 'flex-start'};\n  justify-content: ${({ justifyContent }) => justifyContent || 'flex-start'};\n`;\n\nexport const Grid = styled.div`\n  display: flex;\n  margin-left: -10px;\n  margin-right: -10px;\n\n  ${minWidth.tablet`\n    margin-left: -24px;\n    margin-right: -24px;\n  `}\n\n  ${maxWidth.tablet`\n    flex-wrap: wrap;\n  `}\n`;\n\nexport const GridItem = styled.div`\n  width: 100%;\n  padding-left: 10px;\n  padding-right: 10px;\n\n  ${minWidth.tablet`\n    width: ${({ width }) => width || '50%'};\n    padding-left: 24px;\n    padding-right: 24px;\n\n     ${({ hideOnDesktop }) =>\n       hideOnDesktop &&\n       css`\n         display: none;\n       `}\n  `}\n\n  ${maxWidth.tablet`\n    ${({ hideOnMobile }) =>\n      hideOnMobile &&\n      css`\n        display: none;\n      `}\n\n    ${({ mobileFirst }) =>\n      mobileFirst &&\n      css`\n        order: -1;\n      `}\n  `}\n`;\n\nexport const StickyContaner = styled.div`\n  position: sticky;\n  top: ${({ top }) => top || '15px'};\n\n  ${maxWidth.phone`\n    position: static;\n  `}\n`;\n","import styled, { css } from 'styled-components';\nimport logo from '../../images/logo.svg';\nimport { primaryFont } from '../variables/fonts';\nimport { minWidth, maxWidth } from '../mixins';\nimport { Container } from '../common';\n\nconst textStyles = css`\n  line-height: 1.2;\n  text-align: center;\n  text-transform: uppercase;\n`;\n\nexport const FormWrapper = styled(Container)`\n  position: relative;\n  display: flex;\n  flex-direction: ${({ direction }) => direction || 'row'};\n  justify-content: flex-start;\n  align-items: center;\n  margin: 0 auto 20px;\n  padding: 48px 20px 90px;\n  box-sizing: border-box;\n  min-height: 530px;\n  \n  ${maxWidth.tablet`\n    width: 320px;\n  `}\n  ${minWidth.tablet`\n    width: 460px;\n  `}\n  \n  .ant-form {\n    width: 100%;\n  }\n  .ant-form-item {\n    margin-bottom: 12px;\n  }\n  \n  \n  \n  \n  // &:after {\n  //   content: '';\n  //   position: absolute;\n  //   bottom: 20px;\n  //   right: 20px;\n  //   width: 45px;\n  //   height: 60px;\n  //   background: url('${logo}') center center/60px auto no-repeat;\n  // }\n\n  > * {\n    position:relative;\n    box-sizing: border-box;\n    font-family: ${primaryFont};\n  }\n`;\n\nexport const FormTitle = styled.div`\n  ${textStyles};\n  font-size: 20px;\n  margin: 0 auto 10px;\n  width: 230px;\n\n  ${minWidth.tablet`\n    width: calc(100% + 60px);\n    margin: 0 -30px 10px;\n  `};\n`;\n\nexport const FormSubtitle = styled(FormTitle)`\n  font-weight: bold;\n  margin-bottom: 0;\n`;\n","import styled from 'styled-components';\nimport Button from '../Button';\n\nexport const ActionButtonsWrapper = styled.div`\n  margin-top: 24px;\n  width: 100%;\n  text-align: center;\n`;\n\nexport const ActionButtonsSubmit = styled(Button)`\n  width: 100%;\n`;\n\nexport const ActionButtonsCancel = styled(Button)``;\n","import React from 'react';\nimport Button from '../Button';\nimport { BUTTON_BACK, BUTTON_COMPLETE_DONATION } from '../../../../constants';\nimport { ActionButtonsCancel, ActionButtonsSubmit, ActionButtonsWrapper } from './styles';\n\nconst ActionButtons = ({ onSubmit, onCancel, submitTitle = 'send', style = {} }) => {\n  return (\n    <ActionButtonsWrapper style={style}>\n      <ActionButtonsSubmit type=\"primary\" onClick={onSubmit}>\n        {submitTitle}\n      </ActionButtonsSubmit>\n      {onCancel && (\n        <ActionButtonsCancel style={{ marginTop: '12px' }} onClick={onCancel}>\n          {BUTTON_BACK}\n        </ActionButtonsCancel>\n      )}\n    </ActionButtonsWrapper>\n  );\n};\n\nexport default ActionButtons;\n","import styled from 'styled-components';\nimport { colorBlackLight, colorRed, colorWhite } from '../../../../styles/variables/colors';\nimport { Button } from 'antd';\n\nexport const FormButton = styled(Button)`\n  display: inline-block;\n  line-height: 1.2;\n  height: auto;\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 16px;\n  margin-bottom: 12px;\n  padding: 14px 30px;\n  font-weight: 700;\n  border-width: 2px;\n  border-style: solid;\n  border-color: ${({ type }) => (type === 'primary' ? colorRed : colorBlackLight)};\n  background: ${({ type }) => (type === 'primary' ? colorRed : colorBlackLight)};\n  color: ${colorWhite};\n  border-radius: 10px;\n  width: ${({ type }) => (type === 'primary' ? '100%' : 'auto')};\n\n  &:active,\n  &:hover,\n  &:focus {\n    color: ${colorWhite};\n    border-color: ${({ type }) => (type === 'primary' ? colorRed : colorBlackLight)};\n    background: ${({ type }) => (type === 'primary' ? colorRed : colorBlackLight)};\n  }\n`;\n","import React from 'react';\nimport { FormButton } from './styles';\n\nconst Button = ({ children, ...otherProps }) => {\n  return <FormButton {...otherProps}>{children}</FormButton>;\n};\n\nexport default Button;\n","import styled from 'styled-components';\nimport { colorBlack, colorWhite } from '../../../../styles/variables/colors';\nimport { Input } from 'antd';\n\nexport const FormInput = styled(Input)`\n  width: 100%;\n  line-height: 1.2;\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 16px;\n  font-weight: 400;\n  padding: 14px 10px;\n  background: ${colorWhite};\n  color: ${colorBlack};\n  border-radius: 10px;\n  border-color: transparent;\n  filter: drop-shadow(0px 1px 10px rgba(0, 0, 0, 0.15));\n`;\n","import React from 'react';\nimport { FormInput } from './styles';\n\nconst Input = ({ type = 'text', ...otherProps }) => {\n  return <FormInput type={type} {...otherProps} />;\n};\n\nexport default Input;\n","export const primaryFont = 'Roboto Condensed, sans-serif';\nexport const secondaryFont = 'Roboto, sans-serif';\n","import React from 'react';\nimport { FormTitle } from '../../../styles/UI/form';\nimport { CARD_INFO, PLACEHOLDER_PHONE, PLACEHOLDER_EMAIL, PHONE_LABEL } from '../../../constants';\nimport Input from '../components/Input';\nimport { Form, Row, Col } from 'antd';\nimport useValidation from '../utils/useValidation';\nimport ActionButtons from '../components/ActionButtons';\nimport { sendContactFormApi } from '../../../api';\n\nconst ContactForm = ({ errors, currentForm, bindedInputFunctions, bindedSubmit, onCancel }) => {\n  return (\n    <>\n      <FormTitle>{PHONE_LABEL}</FormTitle>\n\n      <Form.Item {...errors.phone} label=\"\">\n        <Input\n          name=\"phone\"\n          size=\"large\"\n          placeholder={PLACEHOLDER_PHONE}\n          defaultValue={currentForm.phone}\n          style={{ margin: '12px 0 0' }}\n          {...bindedInputFunctions}\n        />\n      </Form.Item>\n      <Form.Item {...errors.email} label=\"\">\n        <Input\n          name=\"email\"\n          size=\"large\"\n          placeholder={PLACEHOLDER_EMAIL}\n          defaultValue={currentForm.email}\n          style={{ marginBottom: 0 }}\n          {...bindedInputFunctions}\n        />\n      </Form.Item>\n\n      <ActionButtons onCancel={onCancel} onSubmit={bindedSubmit} style={{ margin: 0 }} />\n    </>\n  );\n};\n\nexport default ContactForm;\n","import { useState, useEffect, useCallback } from 'react';\nimport * as moment from 'moment';\n\nconst TYPE_INPUT = 'input';\nconst TYPE_SELECT = 'select';\nconst TYPE_MULTISELECT = 'multiselect';\nconst TYPE_CHECKBOX = 'checkbox';\nconst TYPE_DATEPICKER = 'datepicker';\nconst TYPE_RADIO = 'radio';\nconst TYPE_SWITCH = 'switch';\n\nfunction formToKeyValue(form) {\n  const result = {};\n  Object.keys(form).forEach((field) => {\n    if (!form[field]) return;\n\n    result[field] = form[field].value || (form[field].value === false ? false : '');\n  });\n  return { ...result };\n}\n\nconst useValidation = (submitAction, initialForm = {}, formData = {}) => {\n  // Init form and validation hook\n\n  const [form, setForm] = useState({\n    ...formToKeyValue(initialForm),\n    ...formData,\n  });\n  const [errors, setErrors] = useState({});\n\n  // Clear form\n\n  const onClearForm = () => {\n    const formValues = {};\n    Object.keys(initialForm).forEach((field) => {\n      if (initialForm[field]) {\n        formValues[field] = '';\n      }\n    });\n    setForm(formValues);\n    setErrors({});\n  };\n\n  const saveInput = ({ name, value }) => setForm(() => ({ ...form, [name]: value }));\n\n  // Validation -----------------------------------------------------\n\n  const validateInput = ({ name, value, rules = [] }, isNotSetState) => {\n    const result = {};\n    const testTargets = {\n      length: value !== null && value.length ? value.length : 0,\n    };\n\n    rules.forEach(({ regexp, text, param, confirmField }) => {\n      // Password confirmation field\n      const stag = confirmField ? form[confirmField] : regexp;\n\n      // Check input params (length)\n      const target = param ? testTargets[param] : value;\n\n      const isError = value === null || !new RegExp(stag).test(target);\n      const validateStatus = isError ? 'error' : null; // 'success' 'warning' 'error' 'validating'\n      const help = isError ? text : null;\n\n      if (isError) {\n        result[name] = { validateStatus, help };\n      }\n    });\n\n    if (!isNotSetState) {\n      setErrors((state) => {\n        const newState = { ...state };\n        const isEmptyResult = !Object.keys(result).length;\n        const isPresentInState = state[name];\n\n        if (isEmptyResult && isPresentInState) delete newState[name];\n\n        return { ...newState, ...result };\n      });\n    }\n\n    return result;\n  };\n\n  const validateForm = () => {\n    let result = {};\n\n    Object.entries(form).forEach(([name, value]) => {\n      const rules = initialForm[name] && 'rules' in initialForm[name] && initialForm[name].rules;\n\n      if (rules) {\n        result = { ...result, ...validateInput({ name, value, rules }, true) };\n      }\n    });\n\n    setErrors(result);\n\n    return Object.keys(result).length === 0;\n  };\n\n  const validateElement = ({ name, value }) => {\n    const rules = initialForm[name] && 'rules' in initialForm[name] && initialForm[name].rules;\n\n    if (rules) {\n      validateInput({ name, value, rules });\n    }\n  };\n\n  const submitIfValid = () => {\n    if (submitAction && validateForm()) submitAction(form, onClearForm);\n  };\n\n  // Input events -----------------------------------------------------\n\n  const initEvent = (event, select, isUnixDate) => {\n    if (!event) return false;\n    if (event && event.persist) event.persist();\n\n    const getTextType = () => {\n      const isDatePicker = typeof select === 'string' && moment.isMoment(event);\n      const isSelect = !!select && !moment.isMoment(event);\n      const isMultiSelect = isSelect && Array.isArray(event);\n      const isCheckbox = !select && (event.target.checked || event.target.defaultChecked);\n      const isRadio = event.target && event.target.type === TYPE_RADIO;\n\n      let result;\n\n      if (isDatePicker) {\n        result = TYPE_DATEPICKER;\n      } else if (isRadio) {\n        result = TYPE_RADIO;\n      } else if (isCheckbox) {\n        result = TYPE_CHECKBOX;\n      } else if (isMultiSelect) {\n        result = TYPE_MULTISELECT;\n      } else if (isSelect) {\n        result = TYPE_SELECT;\n      } else {\n        result = TYPE_INPUT;\n      }\n\n      return result;\n    };\n\n    const type = getTextType();\n    const typeToData = {\n      [TYPE_DATEPICKER]: {\n        name: select,\n        value: isUnixDate ? event.valueOf() : moment(event).format(),\n      },\n      [TYPE_RADIO]: event.target,\n      [TYPE_CHECKBOX]: event.target,\n      [TYPE_SELECT]: select && select.props,\n      [TYPE_MULTISELECT]: {\n        name: TYPE_MULTISELECT === type && select[0] && select[0].props.name,\n        value: event,\n      },\n      [TYPE_INPUT]: event.target,\n    };\n    const { name, value, checked } = typeToData[type];\n    return { name, value, checked, type };\n  };\n\n  const onChange = (event, select, isTimeStampFormat) => {\n    const { name, value, checked, type } = initEvent(event, select, isTimeStampFormat);\n    const valuesByType = {\n      [TYPE_DATEPICKER]: { name, value },\n      [TYPE_RADIO]: { name, value },\n      [TYPE_CHECKBOX]: { name, value: checked },\n      [TYPE_SELECT]: { name, value },\n      [TYPE_MULTISELECT]: { name, value },\n      [TYPE_INPUT]: { name, value },\n    };\n\n    saveInput(valuesByType[type]);\n    validateElement(valuesByType[type]);\n  };\n\n  const onFocus = (event, select) => {\n    const { name: currentName } = initEvent(event, select);\n    const isSelect = !!select;\n    const eventName = isSelect ? select.props.name : currentName;\n\n    if (errors && errors[eventName]) {\n      const { name, ...otherErrors } = errors;\n      setErrors(otherErrors);\n    }\n  };\n\n  const onKeyDown = (event) => {\n    if (!event) return;\n\n    const isEnterPressed = event.keyCode === 13;\n    const isTextarea = event.target.type === 'textarea';\n\n    if (event && isEnterPressed && !isTextarea) {\n      submitIfValid();\n    }\n  };\n\n  const onBlur = (event) => {\n    if (!event || !event.target || typeof event === 'number') return;\n\n    validateElement(event.target);\n  };\n\n  // Submitting form ---------------------------------------------\n\n  const bindedSubmit = (event) => {\n    if (event) event.preventDefault();\n\n    submitIfValid();\n  };\n\n  const prepareForm = useCallback(() => {\n    if (Object.keys(form)[0] === Object.keys(initialForm)[0]) return;\n\n    setForm({\n      ...formToKeyValue(initialForm),\n      ...formData,\n    });\n  }, [initialForm]);\n\n  useEffect(prepareForm, [initialForm]);\n\n  return {\n    bindedInputFunctions: { onChange, onFocus, onBlur, onKeyDown },\n    bindedSubmit,\n    onClearForm,\n    errors,\n    currentForm: form,\n    formLength: Object.keys(form).length,\n  };\n};\n\nexport default useValidation;\n","import styled, { css } from 'styled-components';\nimport checkbox from '../../../../images/checkbox.svg';\nimport { colorBlackLight, colorRed, colorWhite } from '../../../../styles/variables/colors';\nimport { Checkbox } from 'antd';\nimport { secondaryFont } from '../../../../styles/variables/fonts';\n\nexport const CheckboxWrapper = styled.div``;\n\nexport const CheckboxBlock = styled(Checkbox)`\n  display: flex;\n  align-items: flex-start;\n  justify-content: flex-start;\n    \n  .ant-checkbox-wrapper:hover .ant-checkbox-inner, \n  .ant-checkbox:hover .ant-checkbox-inner, \n  .ant-checkbox-input:focus + .ant-checkbox-inner {\n    border-color: ${colorRed};\n  }\n    \n  .ant-checkbox-checked {\n    position:relative;\n    \n    &:after {\n      border-color: transparent;\n    }\n    \n    .ant-checkbox-inner {\n      border-color: transparent!important;\n    \n      &:after {\n        content: '';\n        position: absolute;\n        top: -2px;\n        left: 1px;\n        width: 31px;\n        height: 24px;\n        background: url('${checkbox}');\n        border: 0;\n        transform: none;\n      }\n    }\n  }\n  \n  .ant-checkbox-inner {\n    background: ${colorWhite};\n    border-color: transparent;\n    box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.1);\n    border-radius: 4px;\n    position:relative;\n    width: 22px;\n    height: 24px;\n    margin-right: 10px;\n  }\n`;\n\nexport const CheckboxTitle = styled.div`\n  line-height: 1.2;\n  margin-top: 3px;\n  font-family: ${secondaryFont};\n`;\n","import React from 'react';\nimport { CheckboxBlock, CheckboxTitle, CheckboxWrapper } from './styles';\n\nconst Checkbox = ({ label, ...props }) => {\n  return (\n    <CheckboxBlock {...props} className=\"checkbox\">\n      <CheckboxTitle>{label}</CheckboxTitle>\n    </CheckboxBlock>\n  );\n};\n\nexport default Checkbox;\n","module.exports = __webpack_public_path__ + \"static/media/checkbox.afe5a233.svg\";","import styled from 'styled-components';\nimport { colorBlackLight, colorRed, colorWhite } from '../../../../styles/variables/colors';\nimport { Switch } from 'antd';\n\nexport const FormSwitchWrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n\n  .ant-switch-handle {\n    width: 28px;\n    height: 28px;\n    left: ${({ checked }) => (checked ? 'calc(100% - 28px - 2px)' : '2px')};\n\n    &:before {\n      border-radius: 50%;\n    }\n  }\n`;\n\nexport const FormSwitch = styled(Switch)`\n  background: ${({ checked }) => (checked ? colorRed : 'rgba(0, 0, 0, 0.125)')};\n  height: 32px;\n  line-height: 32px;\n  min-width: 54px;\n  margin-right: 10px;\n`;\n","import React from 'react';\nimport { FormSwitch, FormSwitchWrapper } from './styles';\n\nconst Switch = ({ children, className, name, label, checked, ...otherProps }) => {\n  const { onChange } = otherProps;\n\n  const handleChange = (checked, event) => {\n    onChange({ ...event, target: { ...event.target, checked, name, value: '' } });\n  };\n\n  return (\n    <FormSwitchWrapper checked={checked}>\n      <FormSwitch {...otherProps} onClick={() => {}} checked={checked} onChange={handleChange} />\n      {label}\n    </FormSwitchWrapper>\n  );\n};\n\nexport default Switch;\n","import React from 'react';\nimport { FormTitle } from '../../../styles/UI/form';\nimport Button from '../components/Button';\nimport {\n  PLACEHOLDER_CARD_CODE,\n  PLACEHOLDER_ADDRESS,\n  CARD_INFO,\n  PLACEHOLDER_CARD_MONTH,\n  PLACEHOLDER_CARD_NUMBER,\n  PLACEHOLDER_CARD_YEAR,\n  PLACEHOLDER_FIRST_NAME,\n  PLACEHOLDER_LAST_NAME,\n  PLACEHOLDER_EMAIL,\n  PLACEHOLDER_NATIONAL_ID,\n  LABEL_RESIDENT,\n  LABEL_CHECK_1_LINK,\n  LABEL_CHECK_1_TEXT,\n  LABEL_CHECK_2_LINK,\n  LABEL_CHECK_2_TEXT,\n  LABEL_CHECK_3_TEXT,\n  BUTTON_COMPLETE_DONATION,\n} from '../../../constants';\nimport Input from '../components/Input';\nimport Switch from '../components/Switch';\nimport Checkbox from '../components/Checkbox';\nimport { Form, Row, Col } from 'antd';\nimport { Link } from 'react-router-dom';\nimport ActionButtons from '../components/ActionButtons';\n\nconst Check1Label = () => (\n  <>\n    <Link to={'/1.pdf'}>{LABEL_CHECK_1_LINK}</Link> &nbsp;\n    {LABEL_CHECK_1_TEXT}\n  </>\n);\nconst Check2Label = () => (\n  <>\n    <Link to={'/2.pdf'}>{LABEL_CHECK_2_LINK}</Link> &nbsp;\n    {LABEL_CHECK_2_TEXT}\n  </>\n);\n\nconst PaymentForm = ({\n  errors,\n  currentForm,\n  bindedSubmit,\n  bindedInputFunctions,\n  goToPrevStage,\n}) => {\n  return (\n    <>\n      <FormTitle style={{ textAlign: 'left' }}>{CARD_INFO}</FormTitle>\n\n      {/* label: PERSON */}\n\n      <Form.Item {...errors.firstName} label=\"\">\n        <Input\n          name=\"firstName\"\n          size=\"large\"\n          placeholder={PLACEHOLDER_FIRST_NAME}\n          defaultValue={currentForm.firstName}\n          {...bindedInputFunctions}\n        />\n      </Form.Item>\n      <Form.Item {...errors.lastName} label=\"\">\n        <Input\n          name=\"lastName\"\n          size=\"large\"\n          placeholder={PLACEHOLDER_LAST_NAME}\n          defaultValue={currentForm.lastName}\n          {...bindedInputFunctions}\n        />\n      </Form.Item>\n\n      {/* label: CARD */}\n\n      <Form.Item {...errors.cardNumber} label=\"\">\n        <Input\n          name=\"cardNumber\"\n          size=\"large\"\n          placeholder={PLACEHOLDER_CARD_NUMBER}\n          defaultValue={currentForm.cardNumber}\n          {...bindedInputFunctions}\n        />\n      </Form.Item>\n\n      <Row gutter=\"12\" style={{ flexWrap: 'nowrap' }}>\n        <Col>\n          <Form.Item {...errors.cardMonth} label=\"\">\n            <Input\n              name=\"cardMonth\"\n              size=\"large\"\n              placeholder={PLACEHOLDER_CARD_MONTH}\n              defaultValue={currentForm.cardMonth}\n              {...bindedInputFunctions}\n            />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item {...errors.cardYear} label=\"\">\n            <Input\n              name=\"cardYear\"\n              size=\"large\"\n              placeholder={PLACEHOLDER_CARD_YEAR}\n              defaultValue={currentForm.cardYear}\n              {...bindedInputFunctions}\n            />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item {...errors.card} label=\"\">\n            <Input\n              name=\"card\"\n              size=\"large\"\n              placeholder={PLACEHOLDER_CARD_CODE}\n              defaultValue={currentForm.card}\n              {...bindedInputFunctions}\n            />\n          </Form.Item>\n        </Col>\n      </Row>\n\n      {/* label: CONTACT */}\n\n      <Form.Item {...errors.email} label=\"\">\n        <Input\n          name=\"email\"\n          size=\"large\"\n          placeholder={PLACEHOLDER_EMAIL}\n          defaultValue={currentForm.email}\n          {...bindedInputFunctions}\n        />\n      </Form.Item>\n\n      <Form.Item {...errors.address} label=\"\">\n        <Input\n          name=\"address\"\n          size=\"large\"\n          placeholder={PLACEHOLDER_ADDRESS}\n          defaultValue={currentForm.address}\n          {...bindedInputFunctions}\n        />\n      </Form.Item>\n\n      <Form.Item {...errors.isResident} label=\"\" style={{ marginTop: '10px' }}>\n        <Switch\n          name=\"isResident\"\n          size=\"large\"\n          label={LABEL_RESIDENT}\n          checked={currentForm.isResident}\n          {...bindedInputFunctions}\n        />\n      </Form.Item>\n\n      {currentForm.isResident && (\n        <Form.Item {...errors.nationalId} label=\"\">\n          <Input\n            name=\"nationalId\"\n            size=\"large\"\n            placeholder={PLACEHOLDER_NATIONAL_ID}\n            defaultValue={currentForm.nationalId}\n            {...bindedInputFunctions}\n          />\n        </Form.Item>\n      )}\n\n      <Form.Item {...errors.check1} label=\"\">\n        <Checkbox\n          name=\"check1\"\n          size=\"large\"\n          label={<Check1Label />}\n          defaultChecked={currentForm.check1}\n          {...bindedInputFunctions}\n        />\n      </Form.Item>\n\n      <Form.Item {...errors.check2} label=\"\">\n        <Checkbox\n          name=\"check2\"\n          size=\"large\"\n          label={<Check2Label />}\n          defaultChecked={currentForm.check2}\n          {...bindedInputFunctions}\n        />\n      </Form.Item>\n\n      <Form.Item {...errors.check3} label=\"\">\n        <Checkbox\n          name=\"check3\"\n          size=\"large\"\n          label={LABEL_CHECK_3_TEXT}\n          defaultChecked={currentForm.check3}\n          {...bindedInputFunctions}\n        />\n      </Form.Item>\n\n      <ActionButtons\n        onCancel={goToPrevStage}\n        onSubmit={bindedSubmit}\n        submitTitle={BUTTON_COMPLETE_DONATION}\n      />\n    </>\n  );\n};\n\nexport default PaymentForm;\n","import styled from 'styled-components';\nimport { Tabs } from 'antd';\nimport { colorBlack, colorRed } from '../variables/colors';\n\nconst { TabPane } = Tabs;\n\nexport const TabsWrapper = styled(Tabs)`\n  width: 100%;\n  overflow-x: visible;\n  overflow-y: visible;\n\n  .ant-tabs-nav-list {\n    width: 100%;\n  }\n\n  .ant-tabs-tabpane {\n    width: 100%;\n  }\n\n  .ant-tabs-tab {\n    width: 50%;\n    margin: 0;\n    justify-content: center;\n    text-transform: uppercase;\n    color: ${colorBlack};\n    font-size: 16px;\n  }\n\n  .ant-tabs-tab-active .ant-tabs-tab-btn {\n    color: ${colorRed};\n  }\n\n  .ant-tabs-nav::before,\n  .ant-tabs-nav::after {\n    border-color: ${colorBlack};\n  }\n\n  .ant-tabs-ink-bar {\n    background: ${colorRed};\n  }\n`;\n\nexport const TabsItem = styled(TabPane)`\n  width: 50%;\n`;\n","import React, { useState } from 'react';\n\n// Constants\nimport { CARD, CONTACT_ME, PAYMENT_TITLE } from '../../../../constants';\n\n// Components\nimport PaymentForm from '../../../../components/Form/forms/PaymentForm';\nimport { FormTitle, FormWrapper } from '../../../../styles/UI/form';\nimport { TabsItem, TabsWrapper } from '../../../../styles/UI/tabs';\nimport ContactForm from '../../../../components/Form/forms/ContactForm';\n\nconst Payment = (props) => {\n  const { stage, goToStage } = props;\n\n  const handleChange = (key) => goToStage(Number(key));\n\n  return (\n    <>\n      <FormTitle>{PAYMENT_TITLE}</FormTitle>\n      <TabsWrapper defaultActiveKey={stage} onChange={handleChange} style={{ marginTop: '30px' }}>\n        <TabsItem tab={CARD} key={2}>\n          <PaymentForm {...props} />\n        </TabsItem>\n        <TabsItem tab={CONTACT_ME} key={4}>\n          <ContactForm {...props} />\n        </TabsItem>\n      </TabsWrapper>\n    </>\n  );\n};\n\nexport default Payment;\n"],"sourceRoot":""}